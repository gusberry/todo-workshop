require('dotenv').load();

const app = require("../app");
const db = require("../models");
const debug = require("debug")("workshop:server");
const http = require("http");

const logger = require("../controllers/log");

const port = normalizePort(process.env.PORT || "3000");

app.set("port", port);

const server = http.createServer(app);

const gracefullyShutdownDB = () =>
  db.sequelize.close().then(() => {
    process.exit(0);
  });

const gracefullyShutdownServer = () => server.close(gracefullyShutdownDB);

db.sequelize
  .sync({ force: true })
  .then(() => {
    logger.debug("Connection has been established successfully.");
    server.listen(port);
  })
  .catch(err => {
    logger.error("Something went wrong: ", err);
    gracefullyShutdownServer();
  });

server.on("listening", onListening);
server.on("error", gracefullyShutdownDB);
server.on("close", gracefullyShutdownDB);

process.on("SIGTERM", gracefullyShutdownServer);
process.on("SIGINT", gracefullyShutdownServer);

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
